name: "Build"

on:
  pull_request:
    branches:
      - dev
      - test
  push:
    branches:
      - dev
      - test
      - main
  workflow_dispatch:
    inputs:
      create_release:
        description: "Create a release"
        required: false
        default: false
        type: boolean

jobs:
  build:
    name: Build & Release
    runs-on: ubuntu-latest

    steps:
      #1 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      #2 Setup Java
      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: "temurin"  # Changed to Temurin (Eclipse Adoptium)
          java-version: "17"

      #3 Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.3"
          channel: "stable"

      #4 Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

      #5 Debug Android Setup
      - name: Debug Android Setup
        run: |
          cd android
          cat build.gradle.kts
          ls -la app/
          if [ -f "app/build.gradle.kts" ]; then
            cat app/build.gradle.kts
          fi
          
      #6 Skip Signing Setup for Debugging
      - name: Create Debug Build Config
        run: |
          mkdir -p android/app/src/debug
          echo "def localProperties = new Properties()" > android/app/build.gradle.kts.new
          echo "def localPropertiesFile = rootProject.file('local.properties')" >> android/app/build.gradle.kts.new
          echo "if (localPropertiesFile.exists()) {" >> android/app/build.gradle.kts.new
          echo "    localPropertiesFile.withReader('UTF-8') { reader ->" >> android/app/build.gradle.kts.new
          echo "        localProperties.load(reader)" >> android/app/build.gradle.kts.new
          echo "    }" >> android/app/build.gradle.kts.new
          echo "}" >> android/app/build.gradle.kts.new
          echo "" >> android/app/build.gradle.kts.new
          
          # Copy the rest of the original file excluding the signing configuration
          cat android/app/build.gradle.kts | grep -v "signingConfig" >> android/app/build.gradle.kts.new
          
          # Replace original with new version
          mv android/app/build.gradle.kts.new android/app/build.gradle.kts
          
          # Create an empty local.properties file
          echo "flutter.sdk=/home/runner/hostedtoolcache/flutter" > android/local.properties
          
          # Show the modified build file
          echo "Modified build.gradle.kts:"
          cat android/app/build.gradle.kts

      #7 Building Debug APK
      - name: Build Debug APK
        run: flutter build apk --debug

      #8 Upload Debug Artifacts
      - name: Upload Debug Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Debug-Releases
          path: |
            build/app/outputs/flutter-apk/app-debug.apk

      #9 Extract Version
      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      #10 Check if Tag Exists
      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      #11 Modify Tag if it Exists
      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV
        
      #12 Create Release
      - name: Create Release
        if: github.event_name == 'push' || github.event.inputs.create_release == 'true'
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-debug.apk"
          tag: v${{ env.VERSION }}
          name: "Trainova v${{ env.VERSION }} (Debug)"
          body: |
            Debug release of Trainova version ${{ env.VERSION }}
            
            ### What's New
            - Auto-update functionality
            - Bug fixes and performance improvements
            
            Note: This is a debug build for testing purposes.
          draft: false
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
