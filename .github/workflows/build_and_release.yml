name: Build and Release APK

on:
  push:
    branches: [main, master]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Set up Java environment
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      # Set up Flutter environment
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.3"
          channel: "stable"

      # Get Flutter dependencies
      - name: Get dependencies
        run: flutter pub get

      # Setup keystore
      - name: Setup keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
          echo "storeFile=keystore.jks" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
        if: "${{ secrets.KEYSTORE_BASE64 != '' }}"
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

      # Build APK
      - name: Build APK
        run: flutter build apk --release

      # Get the version from pubspec.yaml
      - name: Extract version
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | sed 's/version: //g')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Create GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false

      # Upload APK to the release
      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/app/outputs/flutter-apk/app-release.apk
          asset_name: ai_fitness_app_2-v${{ env.VERSION }}.apk
          asset_content_type: application/vnd.android.package-archive
