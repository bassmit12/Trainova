name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Extract version
        id: version
        run: |
          VERSION=$(grep -E '^version:' pubspec.yaml | sed -E 's/version: +(.+)/\1/')
          if [[ $VERSION =~ ([0-9]+\.[0-9]+\.[0-9]+)\+([0-9]+) ]]; then
            RELEASE_VERSION="${BASH_REMATCH[1]}"
            BUILD_NUMBER="${BASH_REMATCH[2]}"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT
            echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
          else
            echo "Error: Could not parse version string correctly"
            exit 1
          fi
        shell: bash
      
      - name: Build APK
        run: flutter build apk --release
      
      - name: Rename APK
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk Trainova-${{ steps.version.outputs.release_version }}.apk
        shell: bash
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: Trainova-${{ steps.version.outputs.release_version }}.apk
          tag_name: v${{ steps.version.outputs.release_version }}
          name: Trainova v${{ steps.version.outputs.release_version }}
          body: |
            Release of Trainova version ${{ steps.version.outputs.release_version }}
            
            ### What's New
            - Auto-update functionality
            - Bug fixes and performance improvements
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
